plugins {
	id 'com.android.library'
	id 'kotlin-android'
	id 'kotlin-kapt'
}

android {
	compileSdkVersion versionCompiler
//	buildToolsVersion versionBuildTool

	compileOptions {
		sourceCompatibility javaSourceCompatibility
		targetCompatibility javaTargetCompatibility
	}

	defaultConfig {
		minSdkVersion 16
		targetSdkVersion versionTarget
		versionCode versionCodeNum
		versionName versionNameString
		vectorDrawables.useSupportLibrary = true

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	kotlinOptions.jvmTarget = "1.8"
}

dependencies {
	api fileTree(dir: 'libs', include: ['*.jar'])

	testImplementation 'junit:junit:4.13.2'
	androidTestImplementation 'androidx.test.ext:junit:1.1.3'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

	implementation "androidx.appcompat:appcompat:${androidXVersion}"
	implementation "androidx.legacy:legacy-support-v4:${androidXLegacyV4}"

	api "com.google.code.gson:gson:${gsonVersion}"
	api "com.squareup.okhttp3:okhttp:${okHttpVersion}"
	testImplementation "com.squareup.okhttp3:mockwebserver:${okHttpVersion}"
	api "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
	api "com.squareup.retrofit2:retrofit:${retrofit2Version}"
	api "com.squareup.retrofit2:converter-gson:${retrofit2Version}"

	api ("io.socket:socket.io-client:${socketIOClientJavaVersion}") {
	  // excluding org.json which is provided by Android
		exclude group: 'org.json', module: 'json'
	}

	api "io.reactivex.rxjava2:rxjava:${rxjavaVersion}"
	api "io.reactivex.rxjava2:rxkotlin:${rxkotlinVersion}"
	api "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}"

	api "com.tinder.scarlet:scarlet:${scarletVersion}"
	api "com.tinder.scarlet:websocket-okhttp:${scarletVersion}"
	api "com.tinder.scarlet:message-adapter-gson:${scarletVersion}"
	api "com.tinder.scarlet:stream-adapter-rxjava2:${scarletVersion}"

	api "org.webrtc:google-webrtc:${webRTCVersion}"

	implementation "com.serenegiant:common:${commonLibVersion}"
}

def repo = new File(rootDir, "repository")

apply plugin: 'maven-publish'

afterEvaluate {
	publishing {
		repositories {
			maven {
				url = "file://${repo.absolutePath}"
			}
		}
		publications {
			release(MavenPublication) {
				groupId = 'com.serenegiant'
				artifactId = 'janus'
				version = janusVersionNameString
				from components.release
				pom {
					inceptionYear = '2018'
					licenses {
						license {
							name = 'The WebRTC Software License'
							url = 'https://webrtc.org/support/license'
							distribution = 'repo'
						}
					}
					developers {
						developer {
							id = 'saki4510t'
							name = 't_saki'
							email = 't_saki@serenegiant.com'
						}
					}
				}
			}
		}
	}
}
